version: '3.4'

services:

  schemaregistry:
    image: confluentinc/cp-schema-registry:5.3.0
    restart: always
    depends_on:
      - zookeeper
      - kafka
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:2181
      SCHEMA_REGISTRY_HOST_NAME: schemaregistry
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8081"
    ports:
      - 8081:8081
    networks:
      - my-mongo-cluster
  
  zookeeper:
    image: confluentinc/cp-zookeeper:latest    
    networks: 
      - my-mongo-cluster
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  
  kafka:
    image: confluentinc/cp-kafka:latest    
    networks: 
      - my-mongo-cluster
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT      
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG_CLEANER_DELETE_RETENTION_MS: 5000
      KAFKA_BROKER_ID: 1
      KAFKA_MIN_INSYNC_REPLICAS: 1

  connect:
    image: confluentinc/kafka-connect-datagen:latest
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 8083:8083
    environment:
      CONNECT_BOOTSTRAP_SERVERS: 'kafka:29092'
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: schemaregistry:8081
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      CLASSPATH: /usr/share/java/monitoring-interceptors/monitoring-interceptors-5.2.1.jar
      CONNECT_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
      CONNECT_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
      CONNECT_LOG4J_LOGGERS: org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR
    networks:
      - my-mongo-cluster
    depends_on:
      - zookeeper
      - kafka
      - schemaregistry

  mongo1:    
    image: mongo
    command: mongod --replSet rs0
    ports:
     - 27017:27017
    networks:
      - my-mongo-cluster

  mongo2:    
    image: mongo
    command: mongod --replSet rs0
    ports:
     - 30002:27017
    networks:
      - my-mongo-cluster

  mongo3:    
    image: mongo
    command: mongod --replSet rs0
    ports:
     - 30003:27017
    networks:
      - my-mongo-cluster

  mongosetup: #setup to create a replicate set with the above mongo nodes.
    image: mongo    
    command: RUN apt-get update && apt-get install -y iputils-ping
    volumes:
      - ./scripts:/scripts
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    networks:
      - my-mongo-cluster
    entrypoint: [ "/scripts/mongoclustersetup.sh" ]

  mongo-seed: #seed some test data
    build: ./mongo-seed-data
    restart: on-failure    
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    networks:
      - my-mongo-cluster

  connectorsetup:
    image: mongo 
    depends_on:
      - mongosetup
      - connect
    command: RUN apt-get update && apt-get install -y iputils-ping
    volumes:
      - ./scripts:/scripts
    networks:
      - my-mongo-cluster
    entrypoint: [ "/scripts/cdcsetup.sh" ]

networks:
  my-mongo-cluster: 